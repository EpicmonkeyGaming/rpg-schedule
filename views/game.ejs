<!DOCTYPE html>
<html lang="en">
<head>
    <title><%= title %> - <%= config.title %></title>
    
    <%- include('head', {account: null, env: env}); %>
    
    <link rel="stylesheet" href="/styles/game.css">
    <script src="/scripts/moment.js"></script>
    <script src="/scripts/moment-recur.js"></script>
    <script src="/locale/<%= lang.code %>.js"></script>
    <script type="text/javascript">
    moment.locale('<%= lang.code %>');
    </script>

    <% if (is.editgame) { %>
        <script src="/scripts/socket.io.js"></script>
    <% } %>
</head>
<body>
<%- include('menu'); %>
<div class="container">
    <h6 class="breadcrumbs">
        <% if (account.user) { %>
            <a href="<%= config.urls.game.dashboard.path %>"><%= lang.nav.MY_GAMES %></a>
            <span class="breadcrumb-divider">/</span>
        <% } %>
        <%= title %>
    </h6>
    <hr />
    <% if (errors.other) { %>
        <div class="alert alert-danger" role="alert">
            <%= errors.other %>
        </div>
    <% } %>
    <form method="post" id="gameForm">
        <div class="row">
            <div class="form-group col-sm-6">
                <label for="guild" class="col-form-label"><%= lang.game.SERVER %></label>
                <input type="text" readonly class="form-control" id="guild" name="guild" value="<%= guild %>">
                <input type="hidden" name="s" value="<%= s %>">
            </div>
            <div class="form-group col-sm-6">
                <label for="channel" class="col-form-label"><%= lang.game.CHANNEL %></label>
                <% if (is.editgame) { %>
                    <input type="text" readonly class="form-control" id="channel" name="channel" value="<%= channel %>">
                    <input type="hidden" name="c" value="<%= c %>">
                <% } else if (channels.length === 1) { %>
                    <input type="text" readonly class="form-control" id="channel" name="channel" value="<%= channels[0].name %>">
                    <input type="hidden" name="c" value="<%= channels[0].id %>">
                <% } else { %>
                    <select class="form-control" id="c" name="c">
                        <% channels.forEach(c => {
                            %><option value="<%= c.id %>"><%= c.name %></option><%
                        }) %>
                    </select>
                    <input type="hidden" id="channel" name="channel" value="<%= channels[0].name %>">
                <% } %>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-sm-12 col-md-4 col-lg-6">
                <label for="adventure" class="col-form-label"><%= lang.game.GAME_NAME %></label>
                <input type="text" class="form-control" id="adventure" name="adventure" required value="<%= adventure %>">
            </div>
            <div class="form-group col-sm-12 col-md-4 col-lg-6">
                <label for="gameImage" class="col-form-label"><%= lang.game.GAME_IMAGE %></label>
                <input type="text" class="form-control" id="gameImage" name="gameImage" value="<%= gameImage %>">
                <!-- <small><%= lang.game.labels.GAME_IMAGE_DESC %></small> -->
            </div>
            <div class="form-group col-sm-6 col-md-4 col-lg-3">
                <label for="dm" class="col-form-label"><%= lang.game.GM_DISCORD_TAG %></label>
                <input type="text" class="form-control" id="dm" name="dm" placeholder="Username#1234" required value="<%= dm %>">
                <% if (errors.dm) { %>
                    <small class="error">Could not find GM tag in server users</small>
                <% } else { %>
                    <small><%= lang.game.labels.DISCORD_TAGS %></small>
                <% } %>
            </div>
            <div class="form-group col-sm-6 col-md-4 col-lg-3">
                <label for="runtime" class="col-form-label"><%= lang.game.RUN_TIME %></label>
                <div class="input-group">
                    <input type="text" class="form-control" id="runtime" name="runtime" value="<%= runtime %>">
                    <div class="input-group-append">
                        <div class="input-group-text"><%= lang.game.labels.HOURS %></div>
                    </div>
                </div>
            </div>
            <div class="form-group col-sm-6 col-md-4 col-lg-3">
                <label for="minPlayers" class="col-form-label"><%= lang.game.MIN_PLAYERS %></label>
                <input type="number" min="1" class="form-control" id="minPlayers" name="minPlayers" required value="<%= minPlayers %>">
                <% if (errors.minPlayers) { %>
                    <small class="error">Invalid number of players</small>
                <% } %>
            </div>
            <div class="form-group col-sm-6 col-md-4 col-lg-3">
                <label for="players" class="col-form-label"><%= lang.game.MAX_PLAYERS %></label>
                <input type="number" min="1" class="form-control" id="players" name="players" required value="<%= players %>">
                <% if (errors.maxPlayers) { %>
                    <small class="error">Invalid number of players</small>
                <% } %>
            </div>
            <div class="form-group col-sm-12 <%= is.newgame ? 'col-md-5' : '' %>">
                <label for="where" class="col-form-label"><%= lang.game.WHERE %></label>
                <input type="text" class="form-control" id="where" name="where" required value="<%= where %>">
            </div>
            <% if (is.newgame) { %>
                <div class="form-group col-sm-6 col-md-3">
                    <label for="when" class="col-form-label"><%= lang.game.WHEN %></label>
                    <select class="form-control" name="when" id="when">
                        <option value="<%= enums.GameWhen.DATETIME %>" <%= when === enums.GameWhen.DATETIME ? 'selected' : '' %>><%= lang.game.options.DATE_TIME %></option>
                        <option value="<%= enums.GameWhen.NOW %>" <%= when === enums.GameWhen.NOW ? 'selected' : '' %>><%= lang.game.options.NOW %></option>
                    </select>
                </div>
                <div class="form-group col-sm-6 col-md-4">
                    <label for="method" class="col-form-label"><%= lang.game.SIGN_UP_METHOD %></label>
                    <select class="form-control" name="method" id="method">
                        <option value="<%= enums.GameMethod.AUTOMATED %>" <%= method === enums.GameMethod.AUTOMATED ? 'selected' : '' %>><%= lang.game.options.AUTOMATED_SIGNUP %></option>
                        <option value="<%= enums.GameMethod.CUSTOM %>" <%= method === enums.GameMethod.CUSTOM ? 'selected' : '' %>><%= lang.game.options.CUSTOM_SIGNUP_INSTRUCTIONS %></option>
                    </select>
                    <div class="d-none d-lg-block">
                        <small id="method-desc"></small>
                    </div>
                </div>
            <% } else { %>
                <input type="hidden" name="method" id="method" value="<%= method %>"> 
                <input type="hidden" name="when" id="when" value="<%= when %>">
            <% } %>
        </div>
        <div id="when__datetime" class="row">
            <div class="form-group col-sm-6 col-md-3">
                <label for="date" class="col-form-label"><%= lang.game.DATE %></label>
                <input type="date" class="form-control" id="date" name="date" value="<%= date %>">
                <div>
                    <% if (is.editgame) { %>
                    <small id="gcalLink"></small>
                    <% } %>
                </div>
                <div>
                    <label class="col-form-label">
                        <input type="checkbox" name="hideDate" <%= hideDate ? 'checked' : '' %> value="true" />
                        Hide Date
                    </label>
                </div>
            </div>
            <div class="form-group col-sm-6 col-md-3">
                <label for="time" class="col-form-label"><%= lang.game.TIME %></label>
                <input type="time" class="form-control" id="time" name="time" value="<%= time %>">
            </div>
            <div class="form-group col-sm-6 col-md-3">
                <label for="timezone" class="col-form-label"><%= lang.game.TIME_ZONE %></label>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">UTC</div>
                    </div>
                    <input type="number" min="-12" max="14" step="0.25" class="form-control" id="timezone" name="timezone" value="<%= timezone %>">
                </div>
                <div>
                    <small id="convertLink"></small>
                </div>
            </div>
            <div class="form-group col-sm-6 col-md-3">
                <label for="reminder" class="col-form-label"><%= lang.game.REMINDER %></label>
                <select class="form-control" id="reminder" name="reminder">
                    <option value="0" <%= reminder === '0' ? 'selected' : '' %>><%= lang.game.options.NO_REMINDER %></option>
                    <option value="15" <%= reminder === '15' ? 'selected' : '' %>><%= lang.game.options.MINUTES_15 %></option>
                    <option value="30" <%= reminder === '30' ? 'selected' : '' %>><%= lang.game.options.MINUTES_30 %></option>
                    <option value="60" <%= reminder === '60' ? 'selected' : '' %>><%= lang.game.options.MINUTES_60 %></option>
                    <option value="360" <%= reminder === '360' ? 'selected' : '' %>><%= lang.game.options.HOURS_6 %></option>
                    <option value="720" <%= reminder === '720' ? 'selected' : '' %>><%= lang.game.options.HOURS_12 %></option>
                    <option value="1440" <%= reminder === '1440' ? 'selected' : '' %>><%= lang.game.options.HOURS_24 %></option>
                </select>
            </div>
        </div>
        <% if (env.RESCHEDULING) { %>
            <div id="when__frequency" class="row">
                <div class="col-freq col-sm-6 col-lg-3">
                    <div class="form-group">
                        <label for="frequency" class="col-form-label"><%= lang.game.FREQUENCY %></label>
                        <select class="form-control" id="frequency" name="frequency">
                            <option value="0" <%= frequency === '0' ? 'selected' : '' %>><%= lang.game.options.NO_REPEAT %></option>
                            <option value="1" <%= frequency === '1' ? 'selected' : '' %>><%= lang.game.options.DAILY %></option>
                            <option value="2" <%= frequency === '2' ? 'selected' : '' %>><%= lang.game.options.WEEKLY %></option>
                            <option value="3" <%= frequency === '3' ? 'selected' : '' %>><%= lang.game.options.BIWEEKLY %></option>
                            <option value="4" <%= frequency === '4' ? 'selected' : '' %>><%= lang.game.options.MONTHLY %></option>
                        </select>
                        <div id="next-date">
                            <small><%= lang.game.NEXT_DATE %>: <span id="nextDate"></span></small>
                        </div>
                    </div>
                </div>
                <div class="form-group col-sm-6 col-lg-4 col-xl-3">
                    <div>
                        <label class="col-form-label"><%= lang.game.WHEN_REPEAT %></label>
                    </div>
                    <div>
                        <label class="col-form-label">
                            <input type="checkbox" name="clearReservedOnRepeat" <%= clearReservedOnRepeat ? 'checked' : '' %> value="true" />
                            <small><%= lang.game.CLEAR_RESERVED %></small>
                        </label>
                    </div>
                </div>
                <div class="form-group col-xweeks col-sm-3 col-lg-2 d-none">
                    <div>
                        <label class="col-form-label"><%= lang.game.options.BIWEEKLY %></label>
                        <input type="number" name="xWeeks" id="xWeeks" min="1" value="<%= xWeeks %>" class="form-control" style="width: 100%;" />
                    </div>
                </div>
                <div class="col-wm col-sm-12 col-lg-5 col-xl-6">
                    <div class="row">
                        <div class="form-group col" id="monthly-type-container">
                            <label for="frequency" class="col-form-label"><%= lang.game.MONTHLY_TYPE %></label>
                            <select class="form-control" id="monthlyType" name="monthlyType">
                                <option value="<%= enums.MonthlyType.WEEKDAY %>" <%= monthlyType === enums.MonthlyType.WEEKDAY ? 'selected' : '' %>><%= lang.game.options.WEEKDAY %></option>
                                <option value="<%= enums.MonthlyType.DATE %>" <%= monthlyType === enums.MonthlyType.DATE ? 'selected' : '' %>><%= lang.game.options.DATE %></option>
                            </select>
                            <div><small id="monthly-weekday-desc"></small></div>
                        </div>
                        <div class="form-group col" id="weekdays-container">
                            <label for="weekdays-selector" class="col-form-label"><%= lang.game.WEEKDAYS %></label>
                            <div id="weekdays-selector" class="btn-group-toggle" data-toggle="buttons">
                                <% for(var i = 0; i < 7; i++) { %>
                                    <label <%- weekdays[i] ? 'class="btn btn-secondary active"' : 'class="btn btn-secondary"' %> for="weekday<%= i %>">
                                        <input type="checkbox" id="weekday<%= i %>" name="weekday<%= i %>" value="true" />
                                        <span class="weekday" day="<%= i %>" len="3"></span>
                                    </label>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        <% } else { %>
            <input type="hidden" name="frequency" value="<% frequency %>" />
            <% for(var i = 0; i < 7; i++) { %>
                <% if (weekdays[i]) { %><input type="hidden" name="weekday<%= i %>" value="true" /><% } %>
            <% } %>
            <% if (clearReservedOnRepeat) { %><input type="hidden" name="clearReservedOnRepeat" value="true" /><% } %>
        <% } %>
        <div class="row">
            <div class="col-sm-5 col-md-4 col-lg-3">
                <div class="form-group">
                    <label for="reserved" class="col-form-label"><%= lang.game.RESERVED_SLOTS %></label>
                    <textarea class="form-control" id="reserved" name="reserved" rows="7" placeholder="Username#1234"><%= reserved %></textarea>
                </div>
                <% if(errors.reserved.length > 0) { %>
                <div>
                  <small class="error">Could not find the following tags in server users:</small>
                  <ul>
                    <% errors.reserved.forEach(r => { %>
                      <li><small class="error"><%= r %></small></li>
                    <% }); %>
                  </ul>
                </div>
                <% } %>
            </div>
            <div class="col-sm-7 col-md-8 col-lg-4">
                <div class="form-group">
                    <label for="customSignup" class="col-form-label"><%= lang.game.CUSTOM_SIGNUP_INSTRUCTIONS %></label>
                    <textarea class="form-control" id="customSignup" name="customSignup" rows="7" maxlength="1500" onkeyup="document.getElementById('cs-len').innerHTML = this.value.length"><%= customSignup %></textarea>
                    <div>
                        <small>
                            <span id="method__custom"><%= lang.game.labels.DISCORD_FORMATTING %>. <%= lang.game.SIGNUP_INSTRUCTIONS_DESC %></span>
                            (<span id="cs-len"><%= customSignup.length %></span> / <%= lang.game.MAX %> <span id="cs-max">1500</span> <%= lang.game.CHARACTERS %>)
                        </small>
                    </div>
                </div>
            </div>
            <div class="col-lg-5">
                <div class="form-group">
                    <label for="description" class="col-form-label"><%= lang.game.DESCRIPTION %></label>
                    <textarea class="form-control" id="description" name="description" rows="7" maxlength="1500" onkeyup="document.getElementById('desc-len').innerHTML = this.value.length"><%= description %></textarea>
                    <small><%= lang.game.labels.DISCORD_FORMATTING %>. (<span id="desc-len"><%= description.length %></span> / <%= lang.game.MAX %> <span id="desc-max">1500</span> <%= lang.game.CHARACTERS %>)</small>
                </div>
            </div>
        </div>
        <div class="form-group row">
            &nbsp;
        </div>
        <% if (is.newgame) { %>
            <div class="form-group row">
                <p class="col-sm-6 mx-auto">
                    <button type="submit" class="btn btn-primary col-12"><%= lang.buttons.SUBMIT %></button>
                </p>
            </div>
        <% } %>
        <% if (is.editgame) { %>
            <div class="form-group form-row">
                <p class="col-md-5">
                    <button type="submit" class="btn btn-primary col-12"><%= lang.buttons.SAVE %></button>
                </p>
                <p class="col-12 col-sm-6 col-md">
                    <input type="submit" name="copy" value="<%= lang.buttons.SAVE_COPY %>" class="btn btn-light col-12">
                </p>
                <p class="col-12 col-sm-6 col-md">
                    <a href="<%= config.urls.game.create.path %>?s=<%= s %>" class="btn btn-light col-12"><%= lang.buttons.NEW_GAME %></a>
                </p>
                <hr class="d-none d-sm-block d-md-none mt-0" style="width: 100%;" />
                <p class="d-none d-sm-block col-12 col-md">
                    <button type="button" onclick="confirmDelete('<%= config.urls.game.delete.path %>?g=<%= _id %>');" class="btn btn-danger col-12"><%= lang.buttons.DELETE_GAME %></button>
                </p>
            </div>
        <% } %>
    </form>
</div>
<script type="text/javascript">
    const postMaxLength = 1500;

    $('#method').change(function() {
        const sel = $(this).val();
        $('#method__custom').addClass('d-none');
        $('#customSignup').removeAttr('required');
        $('#method-desc').html('');

        if (sel === '<%= enums.GameMethod.AUTOMATED %>') {
            $('#method-desc').html('<%= lang.game.labels.AUTOMATED_SIGNUP_DESC %>');
            $('#method__custom').removeClass('d-none');
            $('#when').val('datetime').change();
            $('#description, #customSignup').off("change").off("keyup");
            $('#customSignup').attr("maxlength", postMaxLength);
            $('#cs-max').html(postMaxLength);
            $('#description').attr("maxlength", postMaxLength);
            $('#desc-max').html(postMaxLength);
        } else  if (sel === '<%= enums.GameMethod.CUSTOM %>') {
            $('#customSignup').attr('required','');
            longTextLength();
        }
    }).change();

    $('#when').change(function() {
        const sel = $(this).val();
        $('#when__datetime').addClass('d-none');
        $('#when__frequency').addClass('d-none');
        $('#date').removeAttr('required');
        $('#time').removeAttr('required');
        $('#timezone').removeAttr('required');

        if (sel === '<%= enums.GameWhen.DATETIME %>') {
            $('#when__datetime').removeClass('d-none');
            $('#when__frequency').removeClass('d-none');
            $('#date').attr('required','');
            $('#time').attr('required','');
            $('#timezone').attr('required','');
        } else if (sel === '<%= enums.GameWhen.NOW %>') {
            $('#method').val('custom').change();
        }
    }).change();

    function longTextLength() {
        $('#description, #customSignup').change(function() {
            $('#customSignup').attr("maxlength", postMaxLength - $('#description').val().length);
            $('#cs-max').html(postMaxLength - $('#description').val().length);
            $('#description').attr("maxlength", postMaxLength - $('#customSignup').val().length);
            $('#desc-max').html(postMaxLength - $('#customSignup').val().length);
        }).change().keyup(function() { $(this).change(); });
    }

    <% if (method === enums.GameMethod.CUSTOM) { %>
    longTextLength();
    <% } %>

    $('#frequency, #monthlyType').change(function() {
        const frequency = $('#frequency').val();
        const monthlyType = $('#monthlyType').val();
        $("#weekdays-container").addClass("d-none");
        $("#monthly-type-container").addClass("d-none");
        $('#date').removeAttr("disabled");
        $('.col-freq').removeClass('col-lg-2').addClass('col-lg-3');
        $('.col-freq .form-control').removeClass('pl-1').removeClass('pr-0');
        $('.col-wm').removeClass('col-sm-9').addClass('col-sm-12');
        $('.col-wm').removeClass('col-lg-4').addClass('col-lg-5');
        $('.col-wm').removeClass('col-xl-5').addClass('col-xl-6');
        $('.col-xweeks').addClass('d-none');
        if (frequency == '0') {
            $('#next-date').addClass('d-none');
        } else {
            if (['2','3'].includes(frequency)) {
                $('#weekdays-container').removeClass("d-none");
                $('#weekdays-container').removeClass("col-sm-6");
                if (frequency == '3') {
                    $('.col-freq').removeClass('col-lg-3').addClass('col-lg-2');
                    $('.col-freq .form-control').addClass('pl-1').addClass('pr-0');
                    $('.col-wm').removeClass('col-sm-12').addClass('col-sm-9');
                    $('.col-wm').removeClass('col-lg-5').addClass('col-lg-4');
                    $('.col-wm').removeClass('col-xl-6').addClass('col-xl-5');
                    $('.col-xweeks').removeClass('d-none');
                }
            }
            if (frequency == '4' && monthlyType == '<%= enums.MonthlyType.WEEKDAY %>') {
                $('#monthly-type-container').removeClass("d-none");
            }
            if (frequency == '4' && monthlyType == '<%= enums.MonthlyType.DATE %>') {
                $('#monthly-type-container').removeClass("d-none");;
            }
            updateNextDate($('#date').val(), frequency, monthlyType, $('#monthlyDate').val(), $('#xWeeks').val());
            $('#next-date').removeClass('d-none');
        }
    });//.change();

    // update date on each click on weekday selector labels
    $("#weekdays-selector label").map(function() {
        $(this).mouseup(function() {
            // we want the function to determine the "valid weekdays" only after the click is finished
            setTimeout(function() {
                updateNextDate($('#date').val(), $('#frequency').val(), $('#monthlyType').val(), $('#monthlyDate').val(), $('#xWeeks').val());
            }, 100);
            
        });
    });

    $('#monthlyDate').change(function() {
        updateNextDate($('#date').val(), $('#frequency').val(), $('#monthlyType').val(), $('#monthlyDate').val(), $('#xWeeks').val());
    })
    .keyup(function() {
        $(this).change();
    });

    $('#xWeeks').change(function() {
        updateNextDate($('#date').val(), $('#frequency').val(), $('#monthlyType').val(), $('#monthlyDate').val(), $('#xWeeks').val());
    })
    .keyup(function() {
        $(this).change();
    });

    $(".weekday").each(function() {
        const day = parseInt($(this).attr("day"));
        const len = parseInt($(this).attr("len"));
        const dayOfWeek = moment().day(day).format('dddd').slice(0,len);
        $(this).html(dayOfWeek.charAt(0).toUpperCase() + dayOfWeek.slice(1));
    });

    const updateNextDate = (currentDate, freq, monthlyType, monthlyDate, xWeeks) => {
        const nextDate = getRecurrenceDate(currentDate, freq, monthlyType, monthlyDate, parseInt(xWeeks));
        $('#nextDate').html(moment(nextDate).format('l'));
    }

    $('#c').change(function() {
        $('#channel').val($('#c option:selected').text())
    }).change();

    <% if (password) { %>
    fetch('<%= config.urls.game.auth.path %>?s=<%= s %>', { method: 'GET' })
        .then(response => {
            return response.json();
        })
        .then(session => {
            if (!session) passwordRedirect();;
            if (!session.status) passwordRedirect();;
            if (!(session.status.loggedInTo || []).includes('<%= s %>')) {
                const password = prompt('<%= lang.game.labels.REQUEST_SERVER_PASS %>');
                fetch('<%= config.urls.game.password.path %>?s=<%= s %>&p='+escape(password), { method: 'GET' })
                    .then(response => {
                        return response.json();
                    })
                    .then(data => {
                        if (!data.result) {
                            passwordRedirect();
                        }
                    })
                    .catch(err => {
                        passwordRedirect();
                    });
            }
        })
        .catch(err => {
            console.log(err);
        });

    const passwordRedirect = () => {
        <% if (account.user) { %>
        window.location = '<%= config.urls.game.dashboard.path %>';
        <% } else { %>
        window.location = '<%= config.urls.base.path %>';
        <% } %>
    };
    <% } %>

    const confirmDelete = (url) => {
        if (confirm("Are you sure you want to delete the game? This cannot be undone.")) {
            window.location = url;
        }
    };

    const getTZUrls = (date, time, gmtOffset) => {
        const d = new Date(`${date.replace(/-/g, "/").replace(/UTC\//, "UTC-")} ${time} UTC${gmtOffset < 0 ? '-' : '+'}${Math.abs(gmtOffset)}`).toISOString().replace(/[^0-9T]/gi,"").slice(0,13);
        const name = $('#adventure').val();
        const server = $('#guild').val();
        const where = $('#where').val();
        const description = $('#description').val();

        return {
            convert: `https://timee.io/${d}`,
            gcal: `http://www.google.com/calendar/render?action=TEMPLATE&text=${escape(name)}&dates=${d}00Z/${d}00Z&location=${escape(server)}%20-%20${escape(where)}&trp=false&sprop=&details=${escape(description)}`
        };
    };

    const getRecurrenceDate = (baseDate, frequency, monthlyType, monthlyDate, xWeeks) => {
        if (frequency == 0)
            return moment(baseDate).format('YYYY-MM-DD');

        const validDays = $("#weekdays-selector label:not(.disabled):not(:disabled).active")
            .map(function () {
                const day = parseInt($(this).find("input").attr("id").replace("weekday",""));
                return moment().day(day).format('dddd').toLowerCase();
            })
            .get();
        var dateGenerator;
        var nextDate = baseDate;

        switch(frequency) {
            case '1': // daily
                nextDate = moment(baseDate).add(1, 'days');
                break;
            case '2': // weekly
                if (validDays === undefined || validDays.length === 0) break;
                dateGenerator = moment(baseDate).recur().every(validDays).daysOfWeek();
                nextDate = dateGenerator.next(1)[0];
                break;
            case '3': // biweekly
                if (validDays === undefined || validDays.length === 0) break;
                // this is a compound interval...
                dateGenerator = moment(baseDate).recur().every(validDays).daysOfWeek();
                nextDate = dateGenerator.next(1)[0];
                while(nextDate.week() - moment(baseDate).week() < (xWeeks || 2)) { // if the next date is in the same week, diff = 0. if it is just next week, diff = 1, so keep going forward.
                    dateGenerator = moment(nextDate).recur().every(validDays).daysOfWeek();
                    nextDate = dateGenerator.next(1)[0];
                }
                break;
            case '4': // monthly
                if (monthlyType == '<%= enums.MonthlyType.DATE %>') {
                    nextDate = moment(baseDate).add(1, 'month');
                    
                    // describe date option
                    $('#monthly-weekday-desc').html(`<%= lang.game.labels.MONTHLY_DATE %>`);
                }
                else if (monthlyType == '<%= enums.MonthlyType.WEEKDAY %>') {
                    const weekOfMonth = moment(baseDate).monthWeekByDay();
                    const validDay = moment(baseDate).day();
                    dateGenerator = moment(baseDate).recur().every(validDay).daysOfWeek().every(weekOfMonth).weeksOfMonthByDay();
                    nextDate = dateGenerator.next(1)[0];

                    // describe weekday option
                    const description = `<%= lang.game.labels.MONTHLY_WEEKDAY %>`;
                    const weekday = moment(baseDate).format('dddd');
                    let wom = weekOfMonth+1;
                    if (wom == 1) wom += 'st';
                    else if (wom == 2) wom += 'nd';
                    else if (wom == 3) wom += 'rd';
                    else wom += 'th';
                    $('#monthly-weekday-desc').html(description.replace(":XTH", wom).replace(":WEEKDAY", weekday));
                }
        }

        return moment(nextDate).format('YYYY-MM-DD');
    }

    <% if (is.newgame) { %>
        <% if (date === "") { %>
            $('#date').val(moment().format('YYYY-MM-DD'));
        <% } %>
        <% if (time === "") { %>
            $('#time').val(moment().format('HH:mm'));
        <% } %>
        $('#timezone').val(parseInt(moment().format('ZZ')) / 100);
    <% } %>

    $('#date').change(function() {
        var link = getTZUrls($('#date').val(), $('#time').val(), $('#timezone').val());
        $('#convertLink').html(`<a href="${link.convert}" target="_blank" rel="nofollow">${link.convert}</a>`);
        // $('#countdownLink').html(`Countdown: <a href="${link.countdown}" target="_blank" rel="nofollow">${link.countdown}</a>`);
        $('#gcalLink').html(`<a href="${link.gcal}" target="_blank" rel="nofollow"><%= lang.game.ADD_TO_CALENDAR %></a>`);
        updateNextDate($('#date').val(), $('#frequency').val());
    }).change();

    // $('#date').attr('min', moment().format('YYYY-MM-DD'));

    $('#time').change(function() {
        var link = getTZUrls($('#date').val(), $('#time').val(), $('#timezone').val());
        $('#convertLink').html(`<a href="${link.convert}" target="_blank" rel="nofollow">${link.convert}</a>`);
        // $('#countdownLink').html(`Countdown: <a href="${link.countdown}" target="_blank" rel="nofollow">${link.countdown}</a>`);
        $('#gcalLink').html(`<a href="${link.gcal}" target="_blank" rel="nofollow"><%= lang.game.ADD_TO_CALENDAR %></a>`);
    }).change();

    $('#timezone').change(function() {
        var link = getTZUrls($('#date').val(), $('#time').val(), $('#timezone').val());
        $('#convertLink').html(`<a href="${link.convert}" target="_blank" rel="nofollow">${link.convert}</a>`);
        // $('#countdownLink').html(`Countdown: <a href="${link.countdown}" target="_blank" rel="nofollow">${link.countdown}</a>`);
        $('#gcalLink').html(`<a href="${link.gcal}" target="_blank" rel="nofollow"><%= lang.game.ADD_TO_CALENDAR %></a>`);
    }).change();

    <% if (is.editgame) { %>
    const gameId = '<%= _id %>';
    const socket = io();

    socket.on('game', response => {
        if (gameId !== response.gameId) return;
        if (response.action === 'updated') {
            Object.keys(response.game).forEach(key => {
                if ($('#'+key).length > 0) $('#'+key).val(response.game[key]);
            });
        } else if (response.action === 'rescheduled') {
            localStorage.setItem('rescheduled', 1);
            window.location = '<%= config.urls.game.create.path %>?g='+response.newGameId;
        } else if (response.action === 'deleted' && !localStorage.getItem('rescheduled')) {
            alert('<%= lang.game.labels.GAME_DELETED %>');
            window.location = '<%= config.urls.game.create.path %>?s=<%= s %>';
        }
    });
    <% } %>

    setTimeout(function() {
        localStorage.removeItem('rescheduled');
    }, 2000);
    
    $('#frequency').change(); // trigger update here to prevent pre-initialization reference error

    // the "active" class on a label doesn't check its corresponding box at page load
    $('#gameForm').submit(function (event) {
        $("#weekdays-selector input").map(function () {
            if($(`label[for=${$(this).attr('id')}]`).hasClass("active")) {
                $(this).prop("checked", true);
            }
        });
    });
</script>
</body>
</html>